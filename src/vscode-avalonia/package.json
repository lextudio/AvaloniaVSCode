{
  "name": "vscode-axaml",
  "displayName": "Avalonia for VSCode by LeXtudio Inc.",
  "description": "Avalonia tools for Visual Studio Code. Published by LeXtudio Inc.",
  "publisher": "lextudio",
  "version": "11.0.37",
  "license": "MIT",
  "preview": true,
  "qna": "false",
  "sponsor": {
    "url": "https://github.com/sponsors/lextudio"
  },
  "icon": "./media/icon.png",
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets"
  ],
  "keywords": [
    "Avalonia",
    "AvaloniaUI"
  ],
  "galleryBanner": {
    "color": "#161C2D",
    "theme": "dark"
  },
  "bugs": {
    "url": "https://github.com/lextudio/AvaloniaVSCode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lextudio/AvaloniaVSCode"
  },
  "activationEvents": [
    "workspaceContains:**/*.axaml",
    "onLanguage:axaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsWelcome": [
      {
        "view": "explorer",
        "contents": "[Open a folder](command:vscode.openFolder) containing an Avalonia project, or create a new one.\n[Create Avalonia Project](command:avalonia.newProject)"
      }
    ],
    "languages": [
      {
        "id": "AXAML",
        "aliases": [
          "Avalonia XAML",
          "axaml",
          "AXAML"
        ],
        "extensions": [
          ".axaml",
          ".axml"
        ],
        "configuration": "./AXAML.language-configuration.json",
        "icon": {
          "dark": "./media/xaml-dark.svg",
          "light": "./media/xaml-light.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "AXAML",
        "scopeName": "source.AXAML",
        "path": "./AXAML.tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "avalonia.createPreviewerAssets",
        "title": "Create previewer assets",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.showPreviewToSide",
        "title": "Show preview",
        "category": "Avalonia",
        "icon": "$(open-preview)"
      },
      {
        "command": "avalonia.newProject",
        "title": "Create a new Avalonia Project",
        "category": "Avalonia"
      }
      ,
      {
        "command": "avalonia.showSolutionDiscoveryInfo",
        "title": "Show solution discovery info",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.openSolutionModelJson",
        "title": "Open solution model JSON",
        "category": "Avalonia"
      }
      ,
      {
        "command": "avalonia.rebuildSolutionModel",
        "title": "Rebuild solution model",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.showAssemblyResolutionError",
        "title": "Show last assembly resolution error",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.showChosenProject",
        "title": "Show chosen executable project",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.toggleVerboseLogs",
        "title": "Toggle verbose Avalonia logs",
        "category": "Avalonia"
      },
      {
        "command": "avalonia.invalidateMetadataCache",
        "title": "Invalidate Avalonia metadata cache",
        "category": "Avalonia"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "editorLangId == AXAML",
          "command": "avalonia.showPreviewToSide",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "avalonia.showPreviewToSide",
          "when": "resourceLangId == AXAML",
          "group": "Avalonia"
        }
      ]
    },
    "configuration": [
      {
        "title": "Avalonia",
        "type": "object",
        "properties": {
          "avalonia.trace.server": {
            "type": "string",
            "enum": ["off", "messages", "verbose"],
            "default": "messages",
            "description": "Trace level for language server protocol traffic.",
            "scope": "window"
          },
          "avalonia.trace.verbose": {
            "type": "boolean",
            "default": false,
            "description": "Enable verbose Avalonia server side logs (assembly scanning, metadata fallback).",
            "scope": "window"
          },
          "avalonia.previewer.emitBinlog": {
            "type": "boolean",
            "default": false,
            "description": "Emit an MSBuild binary log (msbuild.binlog) when building previewer assets.",
            "scope": "workspace"
          },
          "avalonia.previewer.runDotnetInfo": {
            "type": "boolean",
            "default": false,
            "description": "Run 'dotnet --info' before building previewer assets to capture environment diagnostics.",
            "scope": "workspace"
          },
          "avalonia.completion.buildConfigurationPreference": {
            "type": "string",
            "enum": ["Debug", "Release", "Auto"],
            "default": "Auto",
            "description": "Preferred build configuration for locating assemblies used by completion (Auto tries Debug then Release).",
            "scope": "workspace"
          },
          "avalonia.completion.debounceFsEventsMs": {
            "type": "number",
            "default": 600,
            "minimum": 100,
            "maximum": 10000,
            "description": "Debounce interval (ms) for project / launch file change events before rebuilding solution model.",
            "scope": "workspace"
          },
          "avalonia.misc.suppressXamlStylerRecommendation": {
            "type": "boolean",
            "default": false,
            "description": "Suppress prompt recommending the optional XAML Styler extension (dabbinavo.xamlstyler).",
            "scope": "window"
          },
          
          "axaml.trace.server": {
            "type": "string",
            "enum": ["off", "messages", "verbose"],
            "default": "messages",
            "description": "(Deprecated) Use 'avalonia.trace.server'.",
            "deprecationMessage": "Use 'avalonia.trace.server' instead.",
            "scope": "window"
          },
          "avalonia.verboseLogs": {
            "type": "boolean",
            "default": false,
            "description": "(Deprecated) Use 'avalonia.trace.verbose'.",
            "deprecationMessage": "Use 'avalonia.trace.verbose' instead.",
            "scope": "window"
          },
          "avalonia.buildEmitBinlog": {
            "type": "boolean",
            "default": false,
            "description": "(Deprecated) Use 'avalonia.previewer.emitBinlog'.",
            "deprecationMessage": "Use 'avalonia.previewer.emitBinlog' instead.",
            "scope": "workspace"
          },
          "avalonia.buildRunDotnetInfo": {
            "type": "boolean",
            "default": false,
            "description": "(Deprecated) Use 'avalonia.previewer.runDotnetInfo'.",
            "deprecationMessage": "Use 'avalonia.previewer.runDotnetInfo' instead.",
            "scope": "workspace"
          },
          "avalonia.buildConfigurationPreference": {
            "type": "string",
            "enum": ["Debug", "Release", "Auto"],
            "default": "Auto",
            "description": "(Deprecated) Use 'avalonia.completion.buildConfigurationPreference'.",
            "deprecationMessage": "Use 'avalonia.completion.buildConfigurationPreference' instead.",
            "scope": "workspace"
          },
          "avalonia.debounceFsEventsMs": {
            "type": "number",
            "default": 600,
            "minimum": 100,
            "maximum": 10000,
            "description": "(Deprecated) Use 'avalonia.completion.debounceFsEventsMs'.",
            "deprecationMessage": "Use 'avalonia.completion.debounceFsEventsMs' instead.",
            "scope": "workspace"
          },
          "avalonia.suppressXamlStylerRecommendation": {
            "type": "boolean",
            "default": false,
            "description": "(Deprecated) Use 'avalonia.misc.suppressXamlStylerRecommendation'.",
            "deprecationMessage": "Use 'avalonia.misc.suppressXamlStylerRecommendation' instead.",
            "scope": "window"
          }
        }
      }
    ],
    "snippets": [
      {
        "language": "csharp",
        "path": "./csharp.json"
      }
    ]
  },
  "scripts": {
    "install:all": "yarn install",
    "vscode:prepublish": "yarn run bundle",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "bundle": "node ./esbuild.config.mjs"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.79.0",
    "@types/vscode-webview": "^1.57.1",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.2.3",
    "eslint": "^8.34.0",
    "mocha": "^10.2.0",
    "esbuild": "^0.21.5",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@vscode/codicons": "^0.0.33",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "@xmldom/xmldom": "^0.8.10",
    "bson": "^5.4.0",
    "fs-extra": "^11.1.1",
    "glob": "^8.1.0",
    "portfinder": "^1.0.32",
    "strongly-typed-events": "^3.0.11",
    "tree-kill": "^1.2.2",
    "vscode-languageclient": "^8.1.0",
    "xpath": "^0.0.32"
  },
  "extensionDependencies": [
    "ms-dotnettools.vscode-dotnet-runtime"
  ]
}
